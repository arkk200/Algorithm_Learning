- 버블 정렬 -

선택 정렬, 삽입 정렬, 퀵 정렬 등 
정렬 알고리즘들 중에서 가장 효율성이 떨어지는 알고리즘 중 하나이다.

『 옆에 있는 값과 비교해서 더 작은 값을 앞으로 보낸다. 』





- 과정 -

선택 정렬과 다르게 검사하는 범위가 뒤에서부터 하나씩 줄어든다.

조건 : 현재 값이 비교하려는 값보다 크다면 서로 자리를 바꾼다.

1 10 5 8 7 6 4 3 2 9

1회전

먼저 첫번째 값과 두번째 값을 비교하고 
앞에 값이 뒤에 값보다 크다면 서로 자리를 바꾼다.
(1은 10보다 크지 않으므로 그대로)

1: 1 10 5 8 7 6 4 3 2 9
   ^  ^

두번째 값과 세번째 값도 마찬가지로 비교 후 조건을 만족하면 실행한다.
(10은 5보다 크므로 자리를 바꾼다.)

2: 1 5 10 8 7 6 4 3 2 9
     ^  ^

총 아홉번째 값까지 반복한다면 

3: 1 5 8 10 7 6 4 3 2 9
       ^  ^

4: 1 5 8 7 10 6 4 3 2 9
         ^  ^

5: 1 5 8 7 6 10 4 3 2 9
           ^  ^

6: 1 5 8 7 6 4 10 3 2 9
             ^  ^

7: 1 5 8 7 6 4 3 10 2 9
               ^  ^

8: 1 5 8 7 6 4 3 2 10 9
                 ^  ^

9: 1 5 8 7 6 4 3 2 9 10
                   ^  ^

1 5 8 7 6 4 3 2 9 10
1회전이 끝나고 제일 큰 값이 맨 뒤로 갔다.

여기서 회전 수가 증가 할 때마다
정렬하는 범위가 뒤에서부터 하나씩 줄어든다.

1회전과 마찬가지로 2회전도 해본다면

1: 1 5 8 7 6 4 3 2 9 10
   ^ ^

2: 1 5 8 7 6 4 3 2 9 10
     ^ ^

3: 1 5 7 8 6 4 3 2 9 10
       ^ ^

4: 1 5 7 6 8 4 3 2 9 10
         ^ ^

5: 1 5 7 6 4 8 3 2 9 10
           ^ ^

6: 1 5 7 6 8 3 8 2 9 10
             ^ ^

7: 1 5 7 6 8 4 2 8 9 10
               ^ ^

8: 1 5 7 6 8 4 3 8 9 10
                 ^ ^

1에서 2회전으로 넘어가니 
값을 비교하는 범위가 하나 줄었다.

이렇게 총 9회전이면 정렬이 끝난다.






- 시간복잡도 -

『 버블 정렬의 시간 복잡도는 O(N^2)입니다. 』

선택 정렬과 마찬가지로 비교 연산은 
10 + 9 + 8 + 7 + ... + 1로

=> N * (N + 1) / 2 => N * N

빅오 표기법으로 O(N*N)의 시간 복잡도를 가진다.

선택 정렬과 시간 복잡도는 같지만 실제론 더 느린데 그 이유는 
선택 정렬보다 Swapping하는 횟수가 더 많기 때문이다.

선택 정렬은 가장 작은 값을 하나 고르고 마지막에만 Swapping을 한 번 하지만,
버블 정렬은 매번 Swapping을 해줘야 하기에 훨씬 더 비효율적이다.

(그렇기에 가장 비효율적인 정렬 알고리즘이다.)